shiny::runApp()
runApp()
unique(stroke_data[1, feature])
unique(stroke_data[1, "bmi"])
runApp()
runApp()
runApp()
View(stroke_data)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
stroke_data_formatted <- stroke_data
# Modify inputs in data
for (binary_column in c("hypertension", "heart_disease", "stroke")) {
stroke_data_formatted <- stroke_data_formatted[binary_column][stroke_data_formatted[binary_column] == 0] <- "No"
stroke_data_formatted <- stroke_data_formatted[binary_column][stroke_data_formatted[binary_column] == 1] <- "Yes"
}
stroke_data_formatted <- stroke_data
# Modify inputs in data
for (binary_column in c("hypertension", "heart_disease", "stroke")) {
stroke_data_formatted[binary_column][stroke_data_formatted[binary_column] == 0] <- "No"
stroke_data_formatted[binary_column][stroke_data_formatted[binary_column] == 1] <- "Yes"
}
View(stroke_data_formatted)
stroke_data_formatted <- str_replace_all(stroke_data_formatted, c("Absent" = "A", "Present" = "P"))
stroke_data_formatted <- stroke_data
for (binary_column in c("hypertension", "heart_disease", "stroke")) {
stroke_data_formatted[binary_column][stroke_data_formatted[binary_column] == 0] <- "No"
stroke_data_formatted[binary_column][stroke_data_formatted[binary_column] == 1] <- "Yes"
}
View(stroke_data_formatted)
stroke_data_formatted$work_type <- str_replace_all(stroke_data_formatted$work_type, c("children" = "Child", "Govt_job" = "Government job"))
View(stroke_data_formatted)
stroke_data_formatted <- stroke_data
for (binary_column in c("hypertension", "heart_disease", "stroke")) {
stroke_data_formatted[binary_column][stroke_data_formatted[binary_column] == 0] <- "No"
stroke_data_formatted[binary_column][stroke_data_formatted[binary_column] == 1] <- "Yes"
}
stroke_data_formatted$work_type <- str_replace_all(stroke_data_formatted$work_type, c("children" = "Child", "Govt_job" = "Government job"))
stroke_data_formatted$smoking_status <- str_replace_all(stroke_data_formatted$smoking_status, c("never smoked" = "Never smoker",
"smokes" = "Current smoker",
"formerly smoked" = "Former smoker"))
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
brewer.pal(4, "Set2")
RColorBrewer::brewer.pal(4, "Blues")[2:4]
RColorBrewer::brewer.pal(4, "Set2")[1]
RColorBrewer::brewer.pal("Set2")[1]
RColorBrewer::brewer.pal(1, "Set2")[1]
RColorBrewer::brewer.pal(10, "Set2")[1]
RColorBrewer::brewer.pal(8, "Set2")[1]
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
counts_data <- as.data.frame(table(stroke_data_formatted[,c("heart_disease", "hypertension")]))
View(counts_data)
colnames(counts_data) <- c(feature_1, feature_2, "count")
colnames(counts_data) <- c("heart_disease", "hypertension", "count")
counts_data.group_by("heart_disease")
group_by(counts_data, "heart_disease")
group_by(counts_data, "heart_disease").sum()
group_by(counts_data, heart_disease).sum()
group_by(counts_data, heart_disease)
counts_data.sum()
sum(counts_data$count)
apply(counts_data, 1, function(x) {print(x[1])})
apply(counts_data, 1, function(x) {print(x)})
apply(counts_data, 2, function(x) {print()})
apply(counts_data, 2, function(x) {print(x)})
apply(counts_data, 2, function(x) {print(x[1])})
apply(counts_data, 1, function(x) {print(x[1])})
apply(counts_data, 1, function(x) {print(x[1].item())})
apply(counts_data, 1, function(x) {print(x[1]})
apply(counts_data, 1, function(x) {print(x[1].item())})
apply(counts_data, 1, function(x) {print(x[1].item})
apply(counts_data, 1, function(x) {print(x[1,]})
apply(counts_data, 1, function(x) {print(x[1,])})
apply(counts_data, 1, function(x) {print(x[,1])})
apply(counts_data, 1, function(x) {print(x[1])})
apply(counts_data, 1, function(x) {x[1]})
apply(counts_data, 1, function(x) {counts_data[counts_data$heart_disease == x[1]]})
apply(counts_data, 1, function(x) {counts_data[counts_data$heart_disease == x[1],]})
apply(counts_data, 1, function(x) {sum(counts_data[counts_data$heart_disease == x[1],]$count}))
apply(counts_data, 1, function(x) {sum(counts_data[counts_data$heart_disease == x[1],]$count)})
apply(counts_data, 1, function(x) {x[3] / sum(counts_data[counts_data$heart_disease == x[1],]$count)})
apply(counts_data, 1, function(x) {sum(counts_data[counts_data$heart_disease == x[1],]$count)})
apply(counts_data, 1, function(x) {x["count"] / sum(counts_data[counts_data$heart_disease == x[1],]$count)})
apply(counts_data, 1, function(x) {x["count"]})
apply(counts_data, 1, function(x) {int(x["count"])})
apply(counts_data, 1, function(x) {as.integer(x["count"])})
apply(counts_data, 1, function(x) {as.integer(x["count"]) / sum(counts_data[counts_data$heart_disease == x[1],]$count)})
apply(counts_data, 1, function(x) {as.integer(x["count"]) / sum(counts_data[counts_data$heart_disease == x[1],]$count)}) * 100
apply(counts_data, 1, function(x) {as.integer(x["count"]) / sum(counts_data[counts_data$heart_disease == x[1],]$count)}) * 100
apply(counts_data, 1, function(x) {as.integer(x["count"]) / sum(counts_data[counts_data[,"heart_disease"] == x[1],]$count)}) * 100
apply(counts_data, 1, function(x) {as.integer(x["count"]) / sum(counts_data[counts_data[,"heart_disease"] == x["heart_disease"],]$count)}) * 100
counts_data$percent_feature1 <- apply(counts_data, 1, function(x) {as.integer(x["count"]) / sum(counts_data[counts_data[,"heart_disease"] == x["heart_disease"],]$count)}) * 100
View(counts_data)
paste0(as.character(counts_data$percent_feature1), "% (N=", counts_data$count, ")")
paste0(as.character(round(counts_data$percent_feature1, digits=1)), "% (N=", counts_data$count, ")")
paste0(as.character(round(counts_data$percent_feature1, digits=2)), "% (N=", counts_data$count, ")")
runApp()
